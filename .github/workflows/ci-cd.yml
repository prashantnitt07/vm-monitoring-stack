name: Build and Deploy Monitoring Stack

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/prometheus-stack:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/prometheus-stack:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
     SMTP_FROM: ${{ secrets.SMTP_FROM }}
     SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
     SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
     ALERT_EMAIL_TO: ${{ secrets.ALERT_EMAIL_TO}}
     
    steps:
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: SMTP_FROM,SMTP_USERNAME,SMTP_PASSWORD,ALERT_EMAIL_TO
          script: |
            set -e

            echo "🚀 Starting deployment on EC2..."

            # Clone repository if missing
            if [ ! -d "/home/ubuntu/vm-monitoring-stack/.git" ]; then
              echo "Repository not found. Cloning fresh..."
              git clone https://github.com/<your-username>/vm-monitoring-stack.git /home/ubuntu/vm-monitoring-stack
            fi

            cd /home/ubuntu/vm-monitoring-stack

            echo "📥 Pulling latest changes..."
            git pull origin main

            echo "📦 Checking for docker-compose file..."
            if [ ! -f "docker-compose.yml" ]; then
              echo "❌ docker-compose.yml not found in $(pwd)"
              exit 1
            fi

            echo "🧩 Writing environment file..."
            cat > .env <<EOF
            SMTP_FROM=${SMTP_FROM}
            SMTP_USERNAME=${SMTP_USERNAME}
            SMTP_PASSWORD=${SMTP_PASSWORD}
            ALERT_EMAIL_TO=${ALERT_EMAIL_TO}
            
            EOF

            echo "🐳 Pulling latest Docker image..."
            docker-compose pull

            echo "🛑 Stopping old containers..."
            docker-compose down

            echo "🚀 Starting new stack..."
            docker-compose up -d

            echo "✅ Deployment complete!"
